@using Wiggly
@namespace Wiggly.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using DevExtreme.AspNet.Mvc
@*@model Wiggly.Entities.Schedules;*@
@model List<Wiggly.Controllers.LivestockNames>;


@{
    ViewData["Title"] = "Search Result";
    Layout = "_LayoutAdminLTEVendorDashboard";
}

<link rel="stylesheet" href="~/plugins/leaflet/leaflet.css">
<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />

<link href="~/plugins/toastr/toastr.min.css" rel="stylesheet" />

<dialog>
    <div class="example-container" style="height:450px;">
        <div class="row">
            <section class="col col-12 header location-address">Address : </section>
            <section class="col col-12">
                <div class="row">
                    <section class="col col-12">
                        <div id="addressMapLocationInformation" style="height: 350px; "></div>

                    </section>
                </div>
            </section>
        </div>
    </div>
</dialog>

<style>
    .image-container {
        overflow: auto;
    }

    ul {
        text-align: left;
        display: flex;
    }

    li {
        list-style: none;
        display: inline-block;
    }

    article {
        position: relative;
    }

        article button {
            position: absolute;
            right: 20px;
            top: 5px;
        }

    img {
        width: 150px;
        height: 150px;
        display: block;
        object-fit: cover;
    }

    figure {
        /*background: #7D5976;*/
        text-align: center;
        padding: 10px;
        margin: 10px;
    }

    a {
        color: white;
        text-decoration: none;
    }

        a:hover {
            text-decoration: none;
            color: pink;
        }

    span.description {
        padding: 10px;
        display: block;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 2147483648; /* Sit on top */
        padding-top: 40px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
    }

    /* Modal Content (Image) */
    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        height: 80%;
        max-width: 700px;
    }

    .example-container {
        background: white;
        width: 600px;
        box-sizing: border-box;
        font-family: helvetica;
        font-size: 16px;
        /*        -webkit-box-shadow: 1px 5px 5px 0px rgba(0,0,0,0.15);
        -moz-box-shadow: 1px 5px 5px 0px rgba(0,0,0,0.15);*/
        /*box-shadow: 1px 5px 5px 0px rgba(0,0,0,0.15);*/
        border-radius: 8px;
    }

        .example-container * {
            box-sizing: inherit;
            font-size: inherit;
        }

        .example-container .header {
            margin: 1em 0;
        }

        .example-container #MapLocation {
            margin-bottom: 0.75em;
        }
</style>
<div class="row">
    <div class="col-lg-3">
        @* //TODO: add a form here for search *@
        <div class="card" style="padding: 20px">
            <h5>Filters</h5>
            <form action="SearchResults">
                <div class="input-group">
                    <input type="search" name="addressString" class="form-control form-control-lg" placeholder="Search Location" value="@ViewData["addressString"]">
                    
                </div>
                <div class="input-group">
                    <div class="">
                        <div class="form-group">
                            <label for="livestockType">Type of Livestock</label>
                            <select class="form-control" name="livestockType" >
                                @foreach (var item in Model)
                                {
                                    <option  value="@item.Name">@item.Name</option>
                                }
                            </select>
                        </div>

                    </div>
                    <div class="input-group">
                        <b>Price Range</b>

                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label for="rFrom">From</label>
                                    <input type="number" class="form-control" name="rFrom" placeholder="From" value="@ViewData["rFrom   "]">
                                </div>
                            </div>
                               
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label for="rTo">To</label>
                                    <input type="number" class="form-control" name="rTo" placeholder="To" value="@ViewData["rTo"]">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="input-group">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="col-lg-9 post-container">

    </div>
</div>

<template id="postTemplate">
    <div class="card">
        <div class="card-body">
            <div class="post">
                <div class="user-block">
                    <img class="img-circle img-bordered-sm" src="../../dist/img/person-thumbnail.png" alt="user image">
                    <span class="username">
                        <span class="post-author" href="#">Jonathan Burke Jr.</span>
                        @*<a class="float-right btn-tool edit" role="button"><i class="fas fa-pen"></i></a>*@
                    </span>
                    <span class="description">Shared publicly - 7:30 PM today</span>
                </div>
                <!-- /.user-block -->
                <div class="post-infos" style="line-height:10px">
                    <p class="livestockAddress">Address: <b style="line-height:normal">value</b></p>
                    <table class="table table-hover table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Category</th>
                                <th scope="col">Unit</th>
                                <th scope="col">Qty</th>
                                <th scope="col">Kilos</th>
                                <th scope="col">Price</th>
                                <th scope="col">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>

                <p>
                    <span class="float-right" id="book">
                        <a class="link-black text-sm">
                            <i class="fas fa-calendar-check"></i> Book
                        </a>
                    </span>
                </p>
                <br />
            </div>
        </div>
    </div>
</template>


<template id="item-details">
    <tr>
        <td class="itemdata-cat"></td>
        <td class="itemdata-unit"></td>
        <td class="itemdata-qty"></td>
        <td class="itemdata-kilos"></td>
        <td class="itemdata-price"></td>
        <td class="itemdata-total"></td>
    </tr>
</template>


<template id="postImagesTemplate">
    <li>
        <article>
            <a href="">
                <figure>
                    <img src="http://www.awwwards.com/awards/images/2013/07/bootstrap-resources-cover2.jpg" alt="">
                </figure>
            </a>
        </article>
    </li>
</template>


<div id="imageModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content">
</div>

<div class="modal" id="modal-addBooking" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Booking Request</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="post">
                    <div class="post-infos" style="line-height:10px">
                        <h4 class="booking-info-msg">Item info</h4>
                        <p class="booking-info-livestockType">Livestock type: <b>value</b></p>
                        <p class="booking-info-livestockQty">Quantity: <b>value</b></p>
                        <p class="booking-info-livestockAmount">Amount: <b>value</b> </p>
                        <p class="booking-info-livestockKilos">Kilos: <b>value</b></p>
                        <p class="booking-info-livestockTotalAmount">Total Amount: <b>value</b> </p>
                        <p class="booking-info-livestockAddress">Address: <b style="line-height:normal">value</b></p>
                    </div>
                    <hr />
                    <div class="form-group">
                        <label for="booking-request-quantity">Quantity to book:</label>
                        @*<input type="number" class="form-control" id="booking-request-quantity" aria-describedby="emailHelp" placeholder="Enter Quantity">*@
                        <style>
                            .inline-group-custom {
                                max-width: 9rem;
                                padding: .5rem;
                            }

                                .inline-group-custom .form-control {
                                    text-align: right;
                                }

                            .form-control[type="number"]::-webkit-inner-spin-button,
                            .form-control[type="number"]::-webkit-outer-spin-button {
                                -webkit-appearance: none;
                                margin: 0;
                            }
                        </style>

                        <div class="input-group inline-group-custom">
                            <div class="input-group-prepend">
                                <button class="btn btn-outline-secondary btn-minus">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </div>
                            <input class="form-control quantity" min="0" name="booking-request-quantity" id="booking-request-quantity" value="1" type="number">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary btn-plus">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="booking-request-total">Total Amount:</label>
                        <input type="number" class="form-control" id="booking-request-total" placeholder="Total amount" disabled>
                    </div>
                    <div class="image-container">
                        <ul>
                        </ul>
                    </div>

                </div>
            </div>
            <div class="modal-footer left">
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-success" id="booking-request-send">Request Booking</button>
                <button type="button" class="btn btn-danger" id="booking-request-cancel">Cancel</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


@*
    @{
                string rf = "null";
                if (!string.IsNullOrEmpty((string)ViewData["rFrom"]))
                {
                    rf = (string)ViewData["rFrom"];
                }
            }
            @rf

*@

<script>


    var firstload = {
        addressString : "@ViewData["addressString"]",
        livestockType : "@ViewData["livestockType"]",
        priceRange : "@ViewData["priceRange"]",
        rFrom: '@ViewData["rFrom"]',
        rTo : '@ViewData["rTo"]'
    }

    var itemToBook;

    console.table(firstload);

    function searchPostsByLocation() {
        var p = new Promise(function (resolve, reject) {
            $.ajax({
                url: "../../SearchAPI/SearchResultsPutangIna?addressString=" + firstload.addressString + "&livestockType=" + firstload.livestockType + "&rFrom=" + firstload.rFrom + "&rTo=" + firstload.rTo,
                success: function (data) {
                    resolve(data)
                },
                error: function (data) {
                    reject(data)
                }
            });
        });

        p.then((data) => {
            //toastr.success('Booking Success!');
            console.table(data);
            if (data.length > 0) {
                let postTemplate = document.querySelector('template#postTemplate');
                var postParentContainer = document.querySelector('.post-container');
                let postImagesTemplate = document.querySelector('template#postImagesTemplate');
                let trTemplate = document.querySelector('template#item-details');

                $(".post-container").empty();
                $.each(data, function (i, item) {

                    if (item.ItemDetails.length > 0) {
                        let clone = postTemplate.content.cloneNode(true);

                        let username = clone.querySelector(".post .user-block .username .post-author");
                        username.innerHTML = item.UserFullname;

                        let time = clone.querySelector(".post .user-block .description");
                        time.innerHTML = item.DateCreated;

                        //clone.querySelector(".post .post-infos p.livestockType b").innerHTML = item.Category;
                        //clone.querySelector(".post .post-infos p.livestockQty b").innerHTML = item.Quantity;
                        //clone.querySelector(".post .post-infos p.livestockAmount b").innerHTML = item.Amount;
                        //clone.querySelector(".post .post-infos p.livestockKilos b").innerHTML = item.Kilos;
                        clone.querySelector(".post .post-infos p.livestockAddress b").innerHTML = item.Address;
                        clone.querySelector(".post .post-infos p.livestockAddress").setAttribute("data-lat", item.Lat);
                        clone.querySelector(".post .post-infos p.livestockAddress").setAttribute("data-lng", item.Lng);
                        clone.querySelector(".post .post-infos p.livestockAddress").setAttribute("data-displayName", item.Address);

                        console.log(item.ItemDetails);

                        $.each(item.ItemDetails, function (n, detail) {
                            let trDetailClone = trTemplate.content.cloneNode(true);
                            trDetailClone.querySelector(".itemdata-cat").innerHTML = detail.Category;
                            trDetailClone.querySelector(".itemdata-unit").innerHTML = detail.Unit;
                            trDetailClone.querySelector(".itemdata-qty").innerHTML = detail.Quantity;
                            trDetailClone.querySelector(".itemdata-kilos").innerHTML = detail.Kilos;
                            trDetailClone.querySelector(".itemdata-price").innerHTML = detail.Price;
                            trDetailClone.querySelector(".itemdata-total").innerHTML = detail.Price * detail.Quantity;
                            clone.querySelector(".post .post-infos table tbody").append(trDetailClone);
                        });



                        if (item.Status == "Pending") {
                            //clone.querySelector(".post p span").setAttribute("data-value", item.ItemID);
                            //clone.querySelector(".post p span a").setAttribute("href", "");
                            clone.querySelector(".post p span a").classList.add("text-danger");
                            clone.querySelector(".post p span a").innerHTML = "Already have a pending request.";
                        } else {
                            clone.querySelector(".post p span a").setAttribute("href", "#");
                            clone.querySelector(".post p span").setAttribute("data-value", item.ItemID);
                        }


                        let postImagesParent = clone.querySelector(".post .image-container ul");


                        //console.table(item.ImageList);
                        $.each(item.ImageList, function (i, image) {
                            let imageClone = postImagesTemplate.content.cloneNode(true);

                            let img = imageClone.querySelector("li article a figure img");
                            let a = imageClone.querySelector("li article a");

                            img.setAttribute("src", image.ImagePath);
                            a.setAttribute("href", image.ImagePath);
                            postImagesParent.append(imageClone);
                        });

                        postParentContainer.appendChild(clone);
                    }
                    

                });
            } else {
                document.querySelector('.post-container').innerHTML = "<h5>No post found</h5>";
            }
        }).catch((err) => {
            //toastr.error('Something unexpected happened adding a booking, try again later.');

            console.table(err);
        });
    }

    function calculateAmountAndQuantity() {
        var qnty = document.querySelector("#booking-request-quantity").value;
        var total = qnty * itemToBook.Amount;
        document.querySelector("#booking-request-total").value = total;
    }

    $(document).ready(function () {
        searchPostsByLocation();

        //book is clicked
        $("body").on("click", "#book", function () {
            console.log($(this).attr("data-value"));
            var itemId = $(this).attr("data-value");

            window.location = '/Vendor/Page/bookingrequest?item=' + itemId;
            //var p = new Promise(function (resolve, reject) {
            //    $.ajax({
            //        url: "../../MarketplaceAPI/GetItem?itemId=" + itemId,
            //        success: function (data) {
            //            resolve(data);

            //        },
            //        error: function (data) {
            //            reject(data)
            //        }
            //    });
            //});
            //p.then((data) => {
            //    console.log(data);
            //    itemToBook = data;
            //    document.querySelector(".booking-info-livestockType b").innerHTML = data.Category;
            //    document.querySelector(".booking-info-livestockQty b").innerHTML = data.Quantity;
            //    document.querySelector(".booking-info-livestockAmount b").innerHTML = data.Amount;
            //    document.querySelector(".booking-info-livestockTotalAmount b").innerHTML = data.Total;
            //    document.querySelector(".booking-info-livestockKilos b").innerHTML = data.Kilos;
            //    document.querySelector(".booking-info-livestockAddress b").innerHTML = data.Address;
            //    calculateAmountAndQuantity();
            //    $('#modal-addBooking').modal("toggle");
            //})
            //.catch((err) => {
            //    toastr.error('Something unexpected happened adding a booking, try again later.');

            //    console.table(err);
            //});

        });

        $('.btn-plus, .btn-minus').on('click', function (e) {
            const isNegative = $(e.target).closest('.btn-minus').is('.btn-minus');
            const input = $(e.target).closest('.input-group').find('input');
            if (input.is('input')) {
                input[0][isNegative ? 'stepDown' : 'stepUp']()
            }
            calculateAmountAndQuantity();
        });

        $("body").on("keyup", "#booking-request-quantity", function (e) {
            calculateAmountAndQuantity();
        });

        $("#booking-request-send").click(function () {
            console.log("booking-request-send");
            var qnty = document.querySelector("#booking-request-quantity").value
            var p = new Promise(function (resolve, reject) {
                $.ajax({
                    url: "../../BookingRequestAPI/AddBookingRequest?item=" + itemToBook.ItemID + "&quantity=" + qnty,
                    success: function (data) {
                        resolve(data)
                    },
                    error: function (data) {
                        reject(data)
                    }
                });
            });

            p.then((data) => {
                $('#modal-addBooking').modal("toggle");

                toastr.success('Booking Request sent!');

            }).catch((err) => {
                toastr.error('Something unexpected happened adding a booking, try again later.');
                console.table(err);
            });

            //$('#modal-addBooking').modal("toggle");
        });

        $("#booking-request-cancel").click(function () {
            console.log("sdf");
            $('#modal-addBooking').modal("toggle");
        });


        //image is clicked on the post row
        $('body').on('click', "li article a", function (e) {
            e.preventDefault();
            var modal = document.getElementById("imageModal");
            modal.style.display = "block";
            let imgSrc = $(this).attr("href");

            $("#imageModal img").attr("src", $(this).attr("href"));
        });

        $(".close").on("click", function () {
            var modal = document.getElementById("imageModal");
            modal.style.display = "none";
        });

        //address is clicked
        $("body").on("click", ".livestockAddress ", function (event) {
            event.stopPropagation();
            console.log($(this).attr('data-lat'));
            console.log($(this).attr('data-lng'));
            //$("#addressInfoModal").modal("toggle");
            document.querySelector("dialog").showModal();
            console.log($(this).attr('data-displayName'));
            document.querySelector(".location-address").innerHTML = "Address : " + $(this).attr('data-displayName');
            initAddressMapInformation($(this).attr('data-lat'), $(this).attr('data-lng'), $(this).attr('data-displayName'));
        });

        $('dialog').click(function (e) {
            let dialog = document.querySelector("dialog");

            if (e.target === dialog) {
                document.querySelector("dialog").close();
            }
        });
    });



    //map address lookup
    var addressMapInformation;
    var addressMapInformationLyrOSM;
    var addressMapInformationMarker;
    var addressMapInformationPopup;

    function initAddressMapInformation(latitude, longitude, addressName) {
        var itemLatLng = { lat: parseFloat(latitude), lng: parseFloat(longitude) };

        if (addressMapInformation == null) {
            if (latitude != null && longitude != null) {
                // create map object
                addressMapInformation = L.map('addressMapLocationInformation', {
                    center: new L.LatLng(latitude, longitude),
                }).setView(itemLatLng, 18);


                lyrOSM = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png');
                addressMapInformationPopup = L.popup();
                addressMapInformation.addLayer(lyrOSM);


                var geocoder = L.Control.geocoder().addTo(addressMapInformation);

                addressMapInformationMarker = L.marker(itemLatLng).addTo(addressMapInformation);
                addressMapInformationPopup.setLatLng(itemLatLng).setContent(addressName).openOn(addressMapInformation);

            }
        } else {

            if (addressMapInformationMarker != null) {
                addressMapInformation.removeLayer(addressMapInformationMarker);
                //addressMapInformation.removeLayer(addressMapInformationPopup);
                addressMapInformationMarker = null;
            }

            addressMapInformationPopup = L.popup();

            addressMapInformationMarker = L.marker(itemLatLng).addTo(addressMapInformation);
            addressMapInformationPopup.setLatLng(itemLatLng).setContent(addressName).openOn(addressMapInformation);

        }
    }

</script>